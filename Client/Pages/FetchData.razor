@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <MudDataGrid Items="dummy">
        <Columns>
            <Column T="WeatherForecast" Field="@nameof(WeatherForecast.Date)">
                <CellTemplate>
                    <MudProgressCircular Size="Size.Small" Color="Color.Info" Indeterminate="true" />
                </CellTemplate>
            </Column>
            <Column T="WeatherForecast" Field="@nameof(WeatherForecast.TemperatureC)" Title="Temp. (C)">
                <CellTemplate>
                    <MudProgressCircular Size="Size.Small" Color="Color.Info" Indeterminate="true" />
                </CellTemplate>
            </Column>
            <Column T="WeatherForecast" Field="@nameof(WeatherForecast.TemperatureF)" Title="Temp. (F)">
                <CellTemplate>
                    <MudProgressCircular Size="Size.Small" Color="Color.Info" Indeterminate="true" />
                </CellTemplate>
            </Column>
            <Column T="WeatherForecast" Field="@nameof(WeatherForecast.Summary)">
                <CellTemplate>
                    <MudProgressCircular Size="Size.Small" Color="Color.Info" Indeterminate="true" />
                </CellTemplate>
            </Column>
        </Columns>
    </MudDataGrid>
}
else
{
    <MudDataGrid Items="forecasts">
        <Columns>
            <Column T="WeatherForecast" Field="@nameof(WeatherForecast.Date)">
                <CellTemplate>
                    @context.Item.Date.ToShortDateString();
                </CellTemplate>
            </Column>
            <Column T="WeatherForecast" Field="@nameof(WeatherForecast.TemperatureC)" Title="Temp. (C)" />
            <Column T="WeatherForecast" Field="@nameof(WeatherForecast.TemperatureF)" Title="Temp. (F)" />
            <Column T="WeatherForecast" Field="@nameof(WeatherForecast.Summary)" />
        </Columns>
    </MudDataGrid>
}

@code {
    private WeatherForecast[]? forecasts;

    private WeatherForecast[] dummy = new WeatherForecast[] { new() };

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(2000);
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
